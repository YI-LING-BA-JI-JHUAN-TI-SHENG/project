<?xml version="1.0"?>
<robot name="differential_wheeled_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">


  <xacro:include filename="$(find robot_description_pkg)/urdf/wheel.urdf.xacro" />


<!-- Defining the colors used in this robot -->
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />
  <property name="M_PI_2" value="1.570796327" />
  <property name="DEG_TO_RAD" value="0.017453293" />

  <!-- Main body radius and height -->
  <!-- Main Body Cylinder base   -->
  <property name="base_height" value="0.02" />
  <property name="base_radius2" value="0.2" />
  <property name="base_radius" value="0.3" />
  <property name="base_mass" value="5" /> <!-- in kg-->
  <!--property name="base_len" value="0.3" />
  <property name="base_width" value="0.3" /-->

  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <property name="caster_f_height" value="0.04" />
  <property name="caster_f_radius" value="0.0275" />
  <property name="caster_f_mass" value="0.5" /> <!-- in kg-->


  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <property name="caster_b_height" value="0.04" />
  <property name="caster_b_radius" value="0.0275" />
  <property name="caster_b_mass" value="0.5" /> <!-- in kg-->


  <!-- Wheels -->

  <property name="wheel_mass" value="2.5" /> --> <!-- in kg-->

  <property name="base_x_origin_to_wheel_origin" value="0.25" />
  <property name="base_y_origin_to_wheel_origin" value="0.3" />
  <property name="base_z_origin_to_wheel_origin" value="0.0" />


  <!-- Hokuyo Laser scanner -->
  <property name="hokuyo_size" value="0.05" />

  <!-- Macro for calculating inertia of cylinder -->
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
      iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
      izz="${m*r*r/2}" />
  </macro>

  <!-- the pole-->
  <xacro:property name="pan_link_length" value="0.2" />
  <xacro:property name="pan_link_radius" value="0.02" />

  <!-- the frame-->
  <property name="frame_mass" value="0.2" />
  <property name="frame_len" value="0.15" />
  <property name="frame_width" value="0.02" />
  <property name="frame_height" value="0.05"  />


  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
        iyy="0.0001" iyz="0.0"
        izz="0.0001" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.001 0.001" />
      </geometry>
    </visual>
  </link>

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>

  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <cylinder_inertia  m="${base_mass}" r="${base_radius}" h="${base_height}" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
      <material name="Blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <link name="pan_link">
    <visual>
      <geometry>
        <cylinder length="${pan_link_length}" radius="${pan_link_radius}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
      <material name="White">
        <!--color rgba="0 0 1 1"/-->
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${pan_link_length}" radius="${pan_link_radius+0.02}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
    </collision>
    <xacro:inertial_matrix mass="1"/>
  </link>

  <gazebo reference="pan_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="pan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="pan_link"/>
    <origin xyz="0 0 0"/>
    <axis xyz="0 0 1" />
    <!--limit effort="300" velocity="0.1" lower="-3.14" upper="3.14"/>
      <dynamics damping="50" friction="1"/-->
    </joint>

    <gazebo reference="pan_joint">
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

<!-- upper-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="upper_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <cylinder_inertia  m="${base_mass}" r="${base_radius2}" h="${base_height}" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius2}" />
      </geometry>
      <material name="White" />
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius2}" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="upper_joint" type="fixed">
    <parent link="pan_link"/>
    <child link="upper_link"/>
    <origin xyz="0 0 0.2" rpy="0 0 0"/>
  </joint>

  <gazebo reference="upper_joint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

<!--frame///////////////////////////////////////////////////////
//////////////////////////////////////////////////-->
  <link name="frame1_link" >

    <visual>
      <origin xyz="0 0 0.025" rpy="0 0 0" />
      <geometry>
        <box size="${frame_width} ${frame_len} ${frame_height}" />
      </geometry>
      <material name="Blue" />
    </visual>

    <collision>
      <origin xyz="0 0 0.025" rpy="0 0 0" />
      <geometry>
        <box size="${frame_width} ${frame_len} ${frame_height}" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="frame1_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="frame1_joint" type="fixed">
    <parent link="upper_link"/>
    <child link="frame1_link"/>
    <origin xyz="0.03 0 0" rpy="0 0 0"/>
  </joint>

  <gazebo reference="frame1_joint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <link name="frame2_link" >

    <visual>
      <origin xyz="0 0 0.025" rpy="0 0 0" />
      <geometry>
        <box size="${frame_width} ${frame_len} ${frame_height}" />
      </geometry>
      <material name="Blue" />
    </visual>

    <collision>
      <origin xyz="0 0 0.025" rpy="0 0 0" />
      <geometry>
        <box size="${frame_width} ${frame_len} ${frame_height}" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="frame2_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="frame2_joint" type="fixed">
    <parent link="upper_link"/>
    <child link="frame2_link"/>
    <origin xyz="-0.03 0 0" rpy="0 0 0"/>
  </joint>

  <gazebo reference="frame1_joint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>


<!--Caster front  -->

  <link name="caster_front_link">
    <visual>
      <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
      <geometry>
        <sphere radius="${caster_f_radius}" />
      </geometry>
      <material name="Black" />
    </visual>

    <collision>
      <geometry>
        <sphere radius="${caster_f_radius}" />
      </geometry>
      <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
    </collision>

    <inertial>
      <mass value="${caster_f_mass}" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0"
        izz="0.001" />
    </inertial>
  </link>

  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_front_link"/>
    <origin xyz="0.115 0.0 0.007" rpy="${-M_PI/2} 0 0"/>
  </joint>

  <gazebo reference="caster_front_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

<!--Caster back  -->

  <link name="caster_back_link">
    <visual>
      <origin xyz="0.02 0.02 0 " rpy="${M_PI/2} 0 0" />
      <geometry>
        <sphere radius="${caster_b_radius}" />
      </geometry>
      <material name="Black" />
    </visual>

    <collision>
      <geometry>
        <sphere radius="${caster_b_radius}" />
      </geometry>
      <origin xyz="0 0.02 0 " rpy="${M_PI/2} 0 0" />
    </collision>
    <inertial>
      <mass value="${caster_b_mass}" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0"
        izz="0.001" />
    </inertial>
  </link>

  <joint name="caster_back_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_link"/>
    <origin xyz="-0.135 0.0 0.009" rpy="${-M_PI/2} 0 0"/>
  </joint>

  <gazebo reference="caster_back_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>


<!-- Wheel Definitions -->

  <wheel fb="front" lr="right" parent="base_link" translateX="0" translateY="0.5" flipY="1"/>
  <wheel fb="front" lr="left" parent="base_link" translateX="0" translateY="-0.5" flipY="1"/>

  <!-- SENSORS -->

  <!--camera1-->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/>
      </geometry>
      <material name="Blue" />
    </visual>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="${base_radius - hokuyo_size/2} 0 ${base_height+hokuyo_size/4}" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="camera_link" />
  </joint>
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
           channels, which at that point lie in the range [0,1]. -->
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>

    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>rrbot/camera1</cameraName>
      <imageTopicName>image_raw</imageTopicName>
      <cameraInfoTopicName>camera_info</cameraInfoTopicName>
      <frameName>camera_link</frameName>
      <hackBaseline>0.07</hackBaseline>
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
    </plugin>
  </sensor>
</gazebo>
<!-- hokuyo -->

  <link name="hokuyo_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/>
      </geometry>
      <material name="Blue" />
    </visual>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="${base_radius - hokuyo_size/2} 0 ${base_height+hokuyo_size/4}" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="hokuyo_link" />
  </joint>

  <gazebo reference="hokuyo_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>${hokuyo_size/2} 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.001</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <!-- Differential drive controller  -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <robotNamespace>/</robotNamespace>
      <publishTf>1</publishTf>
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>front_left_wheel_joint</leftJoint>
      <rightJoint>front_right_wheel_joint</rightJoint>
      <wheelSeparation>${2*base_radius}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>30</wheelTorque>
      <wheelAcceleration>1.8</wheelAcceleration>
      <commandTopic>/r1/cmd_vel</commandTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryTopic>odom</odometryTopic>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
</robot>
